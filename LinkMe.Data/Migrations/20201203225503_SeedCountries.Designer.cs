// <auto-generated />
using System;
using LinkMe.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LinkMe.Migrations
{
    [DbContext(typeof(LinkMeContext))]
    [Migration("20201203225503_SeedCountries")]
    partial class SeedCountries
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LinkMe.Core.Entities.Country", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("CountryCode");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryCode = "AD"
                        },
                        new
                        {
                            CountryCode = "AE"
                        },
                        new
                        {
                            CountryCode = "AF"
                        },
                        new
                        {
                            CountryCode = "AG"
                        },
                        new
                        {
                            CountryCode = "AI"
                        },
                        new
                        {
                            CountryCode = "AL"
                        },
                        new
                        {
                            CountryCode = "AM"
                        },
                        new
                        {
                            CountryCode = "AO"
                        },
                        new
                        {
                            CountryCode = "AQ"
                        },
                        new
                        {
                            CountryCode = "AR"
                        },
                        new
                        {
                            CountryCode = "AS"
                        },
                        new
                        {
                            CountryCode = "AT"
                        },
                        new
                        {
                            CountryCode = "AU"
                        },
                        new
                        {
                            CountryCode = "AW"
                        },
                        new
                        {
                            CountryCode = "AX"
                        },
                        new
                        {
                            CountryCode = "AZ"
                        },
                        new
                        {
                            CountryCode = "BA"
                        },
                        new
                        {
                            CountryCode = "BB"
                        },
                        new
                        {
                            CountryCode = "BD"
                        },
                        new
                        {
                            CountryCode = "BE"
                        },
                        new
                        {
                            CountryCode = "BF"
                        },
                        new
                        {
                            CountryCode = "BG"
                        },
                        new
                        {
                            CountryCode = "BH"
                        },
                        new
                        {
                            CountryCode = "BI"
                        },
                        new
                        {
                            CountryCode = "BJ"
                        },
                        new
                        {
                            CountryCode = "BL"
                        },
                        new
                        {
                            CountryCode = "BM"
                        },
                        new
                        {
                            CountryCode = "BN"
                        },
                        new
                        {
                            CountryCode = "BO"
                        },
                        new
                        {
                            CountryCode = "BQ"
                        },
                        new
                        {
                            CountryCode = "BR"
                        },
                        new
                        {
                            CountryCode = "BS"
                        },
                        new
                        {
                            CountryCode = "BT"
                        },
                        new
                        {
                            CountryCode = "BV"
                        },
                        new
                        {
                            CountryCode = "BW"
                        },
                        new
                        {
                            CountryCode = "BY"
                        },
                        new
                        {
                            CountryCode = "BZ"
                        },
                        new
                        {
                            CountryCode = "CA"
                        },
                        new
                        {
                            CountryCode = "CC"
                        },
                        new
                        {
                            CountryCode = "CD"
                        },
                        new
                        {
                            CountryCode = "CF"
                        },
                        new
                        {
                            CountryCode = "CG"
                        },
                        new
                        {
                            CountryCode = "CH"
                        },
                        new
                        {
                            CountryCode = "CI"
                        },
                        new
                        {
                            CountryCode = "CK"
                        },
                        new
                        {
                            CountryCode = "CL"
                        },
                        new
                        {
                            CountryCode = "CM"
                        },
                        new
                        {
                            CountryCode = "CN"
                        },
                        new
                        {
                            CountryCode = "CO"
                        },
                        new
                        {
                            CountryCode = "CR"
                        },
                        new
                        {
                            CountryCode = "CU"
                        },
                        new
                        {
                            CountryCode = "CV"
                        },
                        new
                        {
                            CountryCode = "CW"
                        },
                        new
                        {
                            CountryCode = "CX"
                        },
                        new
                        {
                            CountryCode = "CY"
                        },
                        new
                        {
                            CountryCode = "CZ"
                        },
                        new
                        {
                            CountryCode = "DE"
                        },
                        new
                        {
                            CountryCode = "DJ"
                        },
                        new
                        {
                            CountryCode = "DK"
                        },
                        new
                        {
                            CountryCode = "DM"
                        },
                        new
                        {
                            CountryCode = "DO"
                        },
                        new
                        {
                            CountryCode = "DZ"
                        },
                        new
                        {
                            CountryCode = "EC"
                        },
                        new
                        {
                            CountryCode = "EE"
                        },
                        new
                        {
                            CountryCode = "EG"
                        },
                        new
                        {
                            CountryCode = "EH"
                        },
                        new
                        {
                            CountryCode = "ER"
                        },
                        new
                        {
                            CountryCode = "ES"
                        },
                        new
                        {
                            CountryCode = "ET"
                        },
                        new
                        {
                            CountryCode = "FI"
                        },
                        new
                        {
                            CountryCode = "FJ"
                        },
                        new
                        {
                            CountryCode = "FK"
                        },
                        new
                        {
                            CountryCode = "FM"
                        },
                        new
                        {
                            CountryCode = "FO"
                        },
                        new
                        {
                            CountryCode = "FR"
                        },
                        new
                        {
                            CountryCode = "GA"
                        },
                        new
                        {
                            CountryCode = "GB"
                        },
                        new
                        {
                            CountryCode = "GD"
                        },
                        new
                        {
                            CountryCode = "GE"
                        },
                        new
                        {
                            CountryCode = "GF"
                        },
                        new
                        {
                            CountryCode = "GG"
                        },
                        new
                        {
                            CountryCode = "GH"
                        },
                        new
                        {
                            CountryCode = "GI"
                        },
                        new
                        {
                            CountryCode = "GL"
                        },
                        new
                        {
                            CountryCode = "GM"
                        },
                        new
                        {
                            CountryCode = "GN"
                        },
                        new
                        {
                            CountryCode = "GP"
                        },
                        new
                        {
                            CountryCode = "GQ"
                        },
                        new
                        {
                            CountryCode = "GR"
                        },
                        new
                        {
                            CountryCode = "GS"
                        },
                        new
                        {
                            CountryCode = "GT"
                        },
                        new
                        {
                            CountryCode = "GU"
                        },
                        new
                        {
                            CountryCode = "GW"
                        },
                        new
                        {
                            CountryCode = "GY"
                        },
                        new
                        {
                            CountryCode = "HK"
                        },
                        new
                        {
                            CountryCode = "HM"
                        },
                        new
                        {
                            CountryCode = "HN"
                        },
                        new
                        {
                            CountryCode = "HR"
                        },
                        new
                        {
                            CountryCode = "HT"
                        },
                        new
                        {
                            CountryCode = "HU"
                        },
                        new
                        {
                            CountryCode = "ID"
                        },
                        new
                        {
                            CountryCode = "IE"
                        },
                        new
                        {
                            CountryCode = "IL"
                        },
                        new
                        {
                            CountryCode = "IM"
                        },
                        new
                        {
                            CountryCode = "IN"
                        },
                        new
                        {
                            CountryCode = "IO"
                        },
                        new
                        {
                            CountryCode = "IQ"
                        },
                        new
                        {
                            CountryCode = "IR"
                        },
                        new
                        {
                            CountryCode = "IS"
                        },
                        new
                        {
                            CountryCode = "IT"
                        },
                        new
                        {
                            CountryCode = "JE"
                        },
                        new
                        {
                            CountryCode = "JM"
                        },
                        new
                        {
                            CountryCode = "JO"
                        },
                        new
                        {
                            CountryCode = "JP"
                        },
                        new
                        {
                            CountryCode = "KE"
                        },
                        new
                        {
                            CountryCode = "KG"
                        },
                        new
                        {
                            CountryCode = "KH"
                        },
                        new
                        {
                            CountryCode = "KI"
                        },
                        new
                        {
                            CountryCode = "KM"
                        },
                        new
                        {
                            CountryCode = "KN"
                        },
                        new
                        {
                            CountryCode = "KP"
                        },
                        new
                        {
                            CountryCode = "KR"
                        },
                        new
                        {
                            CountryCode = "KW"
                        },
                        new
                        {
                            CountryCode = "KY"
                        },
                        new
                        {
                            CountryCode = "KZ"
                        },
                        new
                        {
                            CountryCode = "LA"
                        },
                        new
                        {
                            CountryCode = "LB"
                        },
                        new
                        {
                            CountryCode = "LC"
                        },
                        new
                        {
                            CountryCode = "LI"
                        },
                        new
                        {
                            CountryCode = "LK"
                        },
                        new
                        {
                            CountryCode = "LR"
                        },
                        new
                        {
                            CountryCode = "LS"
                        },
                        new
                        {
                            CountryCode = "LT"
                        },
                        new
                        {
                            CountryCode = "LU"
                        },
                        new
                        {
                            CountryCode = "LV"
                        },
                        new
                        {
                            CountryCode = "LY"
                        },
                        new
                        {
                            CountryCode = "MA"
                        },
                        new
                        {
                            CountryCode = "MC"
                        },
                        new
                        {
                            CountryCode = "MD"
                        },
                        new
                        {
                            CountryCode = "ME"
                        },
                        new
                        {
                            CountryCode = "MF"
                        },
                        new
                        {
                            CountryCode = "MG"
                        },
                        new
                        {
                            CountryCode = "MH"
                        },
                        new
                        {
                            CountryCode = "MK"
                        },
                        new
                        {
                            CountryCode = "ML"
                        },
                        new
                        {
                            CountryCode = "MM"
                        },
                        new
                        {
                            CountryCode = "MN"
                        },
                        new
                        {
                            CountryCode = "MO"
                        },
                        new
                        {
                            CountryCode = "MP"
                        },
                        new
                        {
                            CountryCode = "MQ"
                        },
                        new
                        {
                            CountryCode = "MR"
                        },
                        new
                        {
                            CountryCode = "MS"
                        },
                        new
                        {
                            CountryCode = "MT"
                        },
                        new
                        {
                            CountryCode = "MU"
                        },
                        new
                        {
                            CountryCode = "MV"
                        },
                        new
                        {
                            CountryCode = "MW"
                        },
                        new
                        {
                            CountryCode = "MX"
                        },
                        new
                        {
                            CountryCode = "MY"
                        },
                        new
                        {
                            CountryCode = "MZ"
                        },
                        new
                        {
                            CountryCode = "NA"
                        },
                        new
                        {
                            CountryCode = "NC"
                        },
                        new
                        {
                            CountryCode = "NE"
                        },
                        new
                        {
                            CountryCode = "NF"
                        },
                        new
                        {
                            CountryCode = "NG"
                        },
                        new
                        {
                            CountryCode = "NI"
                        },
                        new
                        {
                            CountryCode = "NL"
                        },
                        new
                        {
                            CountryCode = "NO"
                        },
                        new
                        {
                            CountryCode = "NP"
                        },
                        new
                        {
                            CountryCode = "NR"
                        },
                        new
                        {
                            CountryCode = "NU"
                        },
                        new
                        {
                            CountryCode = "NZ"
                        },
                        new
                        {
                            CountryCode = "OM"
                        },
                        new
                        {
                            CountryCode = "PA"
                        },
                        new
                        {
                            CountryCode = "PE"
                        },
                        new
                        {
                            CountryCode = "PF"
                        },
                        new
                        {
                            CountryCode = "PG"
                        },
                        new
                        {
                            CountryCode = "PH"
                        },
                        new
                        {
                            CountryCode = "PK"
                        },
                        new
                        {
                            CountryCode = "PL"
                        },
                        new
                        {
                            CountryCode = "PM"
                        },
                        new
                        {
                            CountryCode = "PN"
                        },
                        new
                        {
                            CountryCode = "PR"
                        },
                        new
                        {
                            CountryCode = "PS"
                        },
                        new
                        {
                            CountryCode = "PT"
                        },
                        new
                        {
                            CountryCode = "PW"
                        },
                        new
                        {
                            CountryCode = "PY"
                        },
                        new
                        {
                            CountryCode = "QA"
                        },
                        new
                        {
                            CountryCode = "RE"
                        },
                        new
                        {
                            CountryCode = "RO"
                        },
                        new
                        {
                            CountryCode = "RS"
                        },
                        new
                        {
                            CountryCode = "RU"
                        },
                        new
                        {
                            CountryCode = "RW"
                        },
                        new
                        {
                            CountryCode = "SA"
                        },
                        new
                        {
                            CountryCode = "SB"
                        },
                        new
                        {
                            CountryCode = "SC"
                        },
                        new
                        {
                            CountryCode = "SD"
                        },
                        new
                        {
                            CountryCode = "SE"
                        },
                        new
                        {
                            CountryCode = "SG"
                        },
                        new
                        {
                            CountryCode = "SH"
                        },
                        new
                        {
                            CountryCode = "SI"
                        },
                        new
                        {
                            CountryCode = "SJ"
                        },
                        new
                        {
                            CountryCode = "SK"
                        },
                        new
                        {
                            CountryCode = "SL"
                        },
                        new
                        {
                            CountryCode = "SM"
                        },
                        new
                        {
                            CountryCode = "SN"
                        },
                        new
                        {
                            CountryCode = "SO"
                        },
                        new
                        {
                            CountryCode = "SR"
                        },
                        new
                        {
                            CountryCode = "SS"
                        },
                        new
                        {
                            CountryCode = "ST"
                        },
                        new
                        {
                            CountryCode = "SV"
                        },
                        new
                        {
                            CountryCode = "SX"
                        },
                        new
                        {
                            CountryCode = "SY"
                        },
                        new
                        {
                            CountryCode = "SZ"
                        },
                        new
                        {
                            CountryCode = "TC"
                        },
                        new
                        {
                            CountryCode = "TD"
                        },
                        new
                        {
                            CountryCode = "TF"
                        },
                        new
                        {
                            CountryCode = "TG"
                        },
                        new
                        {
                            CountryCode = "TH"
                        },
                        new
                        {
                            CountryCode = "TJ"
                        },
                        new
                        {
                            CountryCode = "TK"
                        },
                        new
                        {
                            CountryCode = "TL"
                        },
                        new
                        {
                            CountryCode = "TM"
                        },
                        new
                        {
                            CountryCode = "TN"
                        },
                        new
                        {
                            CountryCode = "TO"
                        },
                        new
                        {
                            CountryCode = "TR"
                        },
                        new
                        {
                            CountryCode = "TT"
                        },
                        new
                        {
                            CountryCode = "TV"
                        },
                        new
                        {
                            CountryCode = "TW"
                        },
                        new
                        {
                            CountryCode = "TZ"
                        },
                        new
                        {
                            CountryCode = "UA"
                        },
                        new
                        {
                            CountryCode = "UG"
                        },
                        new
                        {
                            CountryCode = "UM"
                        },
                        new
                        {
                            CountryCode = "US"
                        },
                        new
                        {
                            CountryCode = "UY"
                        },
                        new
                        {
                            CountryCode = "UZ"
                        },
                        new
                        {
                            CountryCode = "VA"
                        },
                        new
                        {
                            CountryCode = "VC"
                        },
                        new
                        {
                            CountryCode = "VE"
                        },
                        new
                        {
                            CountryCode = "VG"
                        },
                        new
                        {
                            CountryCode = "VI"
                        },
                        new
                        {
                            CountryCode = "VN"
                        },
                        new
                        {
                            CountryCode = "VU"
                        },
                        new
                        {
                            CountryCode = "WF"
                        },
                        new
                        {
                            CountryCode = "WS"
                        },
                        new
                        {
                            CountryCode = "YE"
                        },
                        new
                        {
                            CountryCode = "YT"
                        },
                        new
                        {
                            CountryCode = "ZA"
                        },
                        new
                        {
                            CountryCode = "ZM"
                        },
                        new
                        {
                            CountryCode = "ZW"
                        });
                });

            modelBuilder.Entity("LinkMe.Core.Entities.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OriginalLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ShortLink")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool>("ShownSummary")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("LinkMe.Core.Entities.LinkClick", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WhenClicked")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LinkId");

                    b.ToTable("LinkClicks");
                });

            modelBuilder.Entity("LinkMe.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("LinkMe.Core.Entities.LinkClick", b =>
                {
                    b.HasOne("LinkMe.Core.Entities.Link", null)
                        .WithMany("LinkClicks")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LinkMe.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LinkMe.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinkMe.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LinkMe.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
